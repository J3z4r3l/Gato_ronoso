#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 32 // OLED display height, in pixels
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3C ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);

#define LOGO_WIDTH 64
#define LOGO_HEIGHT 40
const unsigned char  PROGMEM logo[]= {
   0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0x03, 0x00, 0x00, 0x00, 0xff, 0xff,
   0xff, 0xff, 0x03, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00,
   0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x30, 0x00, 0x00,
   0x00, 0x00, 0x30, 0x00, 0x00, 0x30, 0xf8, 0xff, 0xff, 0xff, 0x30, 0x00,
   0x00, 0x30, 0x04, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x30, 0x02, 0xc0,
   0x30, 0x00, 0x32, 0x00, 0x00, 0x30, 0x02, 0xc0, 0x30, 0x00, 0x32, 0x00,
   0x00, 0x30, 0x62, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x30, 0x62, 0x00,
   0xf0, 0x00, 0x32, 0x0f, 0x00, 0x30, 0x02, 0x00, 0xf0, 0x00, 0x32, 0x0f,
   0x00, 0x30, 0x02, 0x00, 0x0c, 0x03, 0xf2, 0x30, 0x00, 0x30, 0x02, 0x00,
   0x0c, 0x03, 0xf2, 0x30, 0xff, 0x30, 0x02, 0x30, 0x0c, 0x0c, 0x32, 0x30,
   0xff, 0x30, 0x02, 0x30, 0x0c, 0x0c, 0x32, 0x30, 0xc3, 0x33, 0x02, 0x00,
   0x0c, 0xf0, 0x0f, 0x30, 0xc3, 0x33, 0x02, 0x00, 0x0c, 0xf0, 0x0f, 0x30,
   0x0f, 0x3f, 0x82, 0x01, 0x0c, 0x00, 0x00, 0x30, 0x0f, 0x3f, 0x82, 0x01,
   0x0c, 0x00, 0x00, 0x30, 0x3c, 0x3c, 0x02, 0x60, 0x03, 0x00, 0x00, 0xc0,
   0x3c, 0x3c, 0x02, 0x60, 0x03, 0x00, 0x00, 0xc0, 0xf0, 0x30, 0x1a, 0x00,
   0x03, 0x0c, 0x00, 0xc3, 0xf0, 0x30, 0x1a, 0x00, 0x03, 0x0c, 0x00, 0xc3,
   0xc0, 0x3f, 0x02, 0x00, 0x03, 0x0f, 0xcc, 0xc3, 0xc0, 0x3f, 0x02, 0x18,
   0x03, 0x0f, 0xcc, 0xc3, 0x00, 0x3c, 0x02, 0x18, 0x03, 0x00, 0x00, 0xc0,
   0x00, 0x3c, 0x62, 0x00, 0x03, 0x00, 0x00, 0xc0, 0x00, 0x30, 0x62, 0x00,
   0x03, 0x0c, 0xc3, 0xc0, 0x00, 0x30, 0x02, 0x00, 0x03, 0x0c, 0xc3, 0xc0,
   0x00, 0x30, 0x04, 0x00, 0x0c, 0xfc, 0xff, 0x30, 0x00, 0x30, 0xf8, 0xff,
   0x0f, 0xfc, 0xff, 0x30, 0x00, 0xfc, 0x00, 0x00, 0x30, 0x00, 0x00, 0x0c,
   0x00, 0xfc, 0x00, 0x00, 0x30, 0x00, 0x00, 0x0c, 0x00, 0x03, 0xff, 0xff,
   0xff, 0xff, 0xff, 0x03, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0x03,
   0x00, 0xc3, 0x33, 0x0c, 0xc0, 0x30, 0xc3, 0x00, 0x00, 0xc3, 0x33, 0x0c,
   0xc0, 0x30, 0xc3, 0x00, 0x00, 0xff, 0xf0, 0x03, 0x00, 0x3f, 0x3c, 0x00,
   0x00, 0xff, 0xf0, 0x03, 0x00, 0x3f, 0x3c, 0x00
  };
void setup() {
  Serial.begin(9600);
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)){
    Serial.print(F("Fallo en la asignaciÃ³n de SSD1306"));
    }
  display.clearDisplay(); //limpiamos el display en caso de que haya algo ahi
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  display.setCursor(80,0); //donde comienza el textpo
  //display.println("Nya");
  //display.display();

  //display.drawLine(0,10,128,10,WHITE);//x,y,puntofinal de x, punto finaly? 
  //display.display();
  display.drawBitmap(40, 0, logo, LOGO_WIDTH, LOGO_HEIGHT, WHITE); // Reemplaza "imagen2" con los datos de tu segunda imagen
      
  //display.drawBitmap((display.width()-LOGO_WIDTH)/ 2,((display.height()- LOGO_HEIGHT )/2)+7,logo, LOGO_WIDTH, LOGO_HEIGHT,SSD1306_WHITE) ;
  
  display.display();

}

void loop() {
  // put your main code here, to run repeatedly:

}
